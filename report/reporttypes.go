// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Package reporttypes contains the types that are also defined in the browser clients.
// The formats need to be consistent.
package reporttypes

import "lukechampine.com/uint128"

// The struct tags in the following structs need to be consistent with the field names defined in:
// https://github.com/WICG/conversion-measurement-api/blob/main/AGGREGATE.md#aggregate-attribution-reports

// AggregationServicePayload contains the payload for a specific helper server.
type AggregationServicePayload struct {
	Origin string `json:"origin"`
	// Payload is a encrypted CBOR serialized instance of struct Payload.
	Payload []byte `json:"payload"`
	KeyID   string `json:"key_id"`
}

// AggregationReport contains the information generated by the browser from a key-value pair,
// which will be used for server-side aggregation.
type AggregationReport struct {
	SourceSite             string `json:"source_site"`
	AttributionDestination string `json:"attribution_destination"`
	// SharedInfo is a CBOR serialized instance of struct SharedInfo.
	SharedInfo                 []byte                       `json:"shared_info"`
	AggregationServicePayloads []*AggregationServicePayload `json:"aggregation_service_payloads"`
}

// SharedInfo contains the shared infomation that will be used as the context info for the hybrid encryption.
type SharedInfo struct {
	ScheduledReportTime int64  `json:"scheduled_report_time"`
	PrivacyBudgetKey    string `json:"privacy_budget_key"`
	Version             string `json:"version"`
	ReportingOrigin     string `json:"reporting_origin"`
}

// Payload defines the payload sent to one server. This type is CBOR-serialized and contained by struct AggregationServicePayload.
type Payload struct {
	Operation string `json:"operation"`
	// DPFKey is a serialized proto of:
	// https://github.com/google/distributed_point_functions/blob/199696c7cde95d9f9e07a4dddbcaaa36d120ca12/dpf/distributed_point_function.proto#L110
	DPFKey  []byte `json:"dpf_key"`
	Padding string `json:"padding"`
}

// RawReport contains the reported key/value pair.
type RawReport struct {
	Bucket uint128.Uint128
	Value  uint64
}
